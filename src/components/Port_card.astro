---
import Knap from "./Knap.astro";
const { img, title, text, state, date, link } = Astro.props;
---

<a href={link}>
  <div class="card">
    <div class="mark">
      {state && <p class="state">{state}</p>}
      {date && <p class="date">{date}</p>}
    </div>

    <div class="img">
      <img src={"../img/" + img + ".webp"} alt="" />
    </div>
    <div class="text">
      <div>
        <h4>{title}</h4>
        <p>{text}</p>
      </div>
      <div class="knap">
        <Knap name="Se mere" color="white" link={"/" + link} />
      </div>
    </div>
  </div>

  <style>
    .text {
      background: linear-gradient(0deg, rgba(25, 25, 25, 1) -10%, rgba(25, 25, 25, 0) 50%);
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: end;
      height: 100%;
      z-index: 9999;
      width: 100%;
      position: absolute;
      opacity: 0%;
      transition: 0.4s ease;
    }
    .text div {
      padding: 1rem;
      position: relative;
      bottom: -4rem;
      transition: 0.4s ease;
    }

    .card {
      flex-shrink: 0;
      display: grid;
      background-color: var(--secondary);
      align-items: start;
      height: 500px;
      aspect-ratio: 50 / 30;
      font-size: 2rem;
      overflow: hidden;
      border-radius: 15px;
      scroll-snap-align: start;
      scroll-margin: 1rem;
      position: relative;
    }

    .card p {
      color: var(--primary);
    }
    .mark {
      position: absolute;
      width: 100%;
      right: 0;
      display: flex;
      justify-content: end;
      margin-right: 1rem;
      gap: 0.5rem;
      transition: 0.5s ease;
      z-index: 99999;
      transition: 0.4s ease;
    }

    .date {
      position: relative;
      background-color: var(--secondary);
      padding: 0.5rem 1rem 0.5rem 1rem;
      transition: 0.7s ease;
      border-radius: 0rem 0rem 0.8rem 0.8rem;
      transition: 0.4s ease;
      top: -40px;
    }

    .state {
      position: relative;
      background-color: rgb(255, 182, 46);
      padding: 0.5rem 1rem 0.5rem 1rem;
      transition: 0.7s ease;
      border-radius: 0rem 0rem 0.3rem 0.8rem;
      transition: 0.4s ease;
      top: -70px;
    }

    .card.active .date {
      top: 0px;
      transition: 0.7s ease;
    }
    .card.active .state {
      top: 0px;
      transition: 0.4s ease;
    }
    .card.active .text {
      opacity: 100%;
      transition: 0.4s ease;
    }
    .card.active .text div {
      bottom: 0rem;
      transition: 0.4s ease;
    }

    h4 {
      margin-bottom: 1rem;
    }

    .card.active .text div:last-child {
      margin-bottom: 1rem;
    }

    .img {
      overflow: hidden;
      background-color: var(--secondary);
      height: 100%;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .knap {
      display: flex;
      align-items: flex-end;
      z-index: 1000000;
      cursor: pointer;
    }

    @media (max-width: 800px) {
      .img img {
        height: 500px;
        width: auto;
      }
      .card {
        flex-shrink: 0;
        align-items: center;
        height: 500px;
        aspect-ratio: 50 / 79;
        font-size: 2rem;
        overflow: hidden;
        cursor: url(svg/move_white.svg), auto;
        border-radius: 15px;
      }

      .card .text {
        opacity: 0%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: flex-start;
        margin-top: auto;
        padding-bottom: 1rem;

        flex-wrap: wrap;
        align-content: flex-end;
        transition: 0.5s ease;
      }
    }

    .card .text div {
      transition: 0.5s ease;
      padding: 0rem;
      padding-left: 1rem;
      padding-right: 1rem;
    }
    .card .text div:last-child {
      margin-bottom: 0.5rem;
    }
    h4 {
      margin-top: 0.3rem;
    }

    .mark {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      right: 0;
      display: flex;
      justify-content: end;
      align-items: flex-start;
      margin-right: 1rem;
      margin-left: 1rem;
      gap: 0.5rem;
      transition: 0.5s ease;
    }

    .date {
      position: relative;
      background-color: var(--secondary);
      padding: 0.5rem 1rem 0.5rem 1rem;
      transition: 0.7s ease;
      border-radius: 0rem 0rem 0.8rem 0.8rem;
    }

    .state {
      position: relative;
      transform-origin: bottom;
      background-color: rgb(255, 182, 46);
      padding: 0.5rem 1rem 0.5rem 1rem;
      transition: 0.7s ease;
      border-radius: 0rem 0rem 0.8rem 0.8rem;
      max-width: 170px;
    }
    h4 {
      line-height: 2rem;
    }
  </style>

  <script>
    const cards = document.querySelectorAll(".card");

    const options = {
      threshold: 1.0, // 100% visibility
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.intersectionRatio === 1) {
          entry.target.classList.add("active");
        } else {
          entry.target.classList.remove("active");
        }
      });
    }, options);

    cards.forEach((card) => {
      observer.observe(card);
    });
  </script>
</a>
